apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'jetty'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}
// For provided jars
configurations {
	provided
}

String springVersion = '4.1.7.RELEASE'
String neo4jVersion = '2.2.3'

dependencies {
	compile 'commons-io:commons-io:2.3'
	compile 'commons-collections:commons-collections:3.2'
	compile 'org.slf4j:slf4j-api:1.7.5'
	runtime 'org.slf4j:jcl-over-slf4j:1.7.5'
	compile 'ch.qos.logback:logback-core:1.0.13'
	compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'org.springframework:spring-core:' + springVersion
	compile 'org.springframework:spring-aop:' + springVersion
	compile 'org.springframework:spring-beans:' + springVersion
	compile 'org.springframework:spring-web:' + springVersion
	compile 'org.springframework:spring-webmvc:' + springVersion
	compile 'org.springframework:spring-orm:' + springVersion
	compile 'org.apache.camel:camel-spring:2.8.6'
	compile 'org.neo4j:neo4j-kernel:' + neo4jVersion
	compile 'org.neo4j:neo4j:' + neo4jVersion
	compile 'org.neo4j:neo4j-io:' + neo4jVersion
	compile 'org.neo4j:neo4j-lucene-index:' + neo4jVersion
	compile 'org.neo4j:neo4j-community:' + neo4jVersion
	compile 'org.neo4j:neo4j-cypher:' + neo4jVersion
	compile 'org.neo4j:neo4j-graph-matching:' + neo4jVersion
	compile 'com.sun.jersey:jersey-client:1.5'
	compile 'org.springmodules:spring-modules-jakarta-commons:0.8'
	compile 'org.freemarker:freemarker:2.3.17'
	compile 'com.googlecode.json-simple:json-simple:1.1.1'
	provided 'org.apache.tomcat:servlet-api:6.0.33'
    testCompile 'junit:junit:4.+'
}

jettyRun {
	httpPort = 9000
	reload = 'automatic'
	scanIntervalSeconds = 2
	/* Change context path (base url). otherwise defaults to name of project */
	contextPath = ''
}

/* Multi-users environment */
// -Pprofile=develop
final String DEFAULT_PROFILE = 'develop'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}/resources"
			}
		}
	}
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}